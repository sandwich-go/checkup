// Code generated by protokitgo. DO NOT EDIT.
package common

import (
	proto "google.golang.org/protobuf/proto"
	"sync"
)

var _ proto.MarshalOptions
var _ sync.Pool

var emptyPool = sync.Pool{New: func() interface{} { return new(Empty) }}

func NewEmpty() *Empty {
	return emptyPool.Get().(*Empty)
}

func (x *Empty) Release() {
	if x != nil {
		x.Reset()
		emptyPool.Put(x)
	}
}

var errorResponsePool = sync.Pool{New: func() interface{} { return new(ErrorResponse) }}

func NewErrorResponse() *ErrorResponse {
	return errorResponsePool.Get().(*ErrorResponse)
}

func (x *ErrorResponse) Release() {
	if x != nil {
		x.Reset()
		errorResponsePool.Put(x)
	}
}

var normalAckPool = sync.Pool{New: func() interface{} { return new(NormalAck) }}

func NewNormalAck() *NormalAck {
	return normalAckPool.Get().(*NormalAck)
}

func (x *NormalAck) Release() {
	if x != nil {
		x.Reset()
		normalAckPool.Put(x)
	}
}

var pingPool = sync.Pool{New: func() interface{} { return new(Ping) }}

func NewPing() *Ping {
	return pingPool.Get().(*Ping)
}

func (x *Ping) Release() {
	if x != nil {
		x.Reset()
		pingPool.Put(x)
	}
}

var pingAckPool = sync.Pool{New: func() interface{} { return new(PingAck) }}

func NewPingAck() *PingAck {
	return pingAckPool.Get().(*PingAck)
}

func (x *PingAck) Release() {
	if x != nil {
		x.Reset()
		pingAckPool.Put(x)
	}
}
