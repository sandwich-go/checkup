// Code generated by protokitgo. DO NOT EDIT.
package internal_command

import (
	proto "google.golang.org/protobuf/proto"
	"sync"
)

var _ proto.MarshalOptions
var _ sync.Pool

var cmdCheckupPool = sync.Pool{New: func() interface{} { return new(CmdCheckup) }}

func NewCmdCheckup() *CmdCheckup {
	return cmdCheckupPool.Get().(*CmdCheckup)
}

func (x *CmdCheckup) Release() {
	if x != nil {
		x.Reset()
		cmdCheckupPool.Put(x)
	}
}

var cmdPingPool = sync.Pool{New: func() interface{} { return new(CmdPing) }}

func NewCmdPing() *CmdPing {
	return cmdPingPool.Get().(*CmdPing)
}

func (x *CmdPing) Release() {
	if x != nil {
		x.Reset()
		cmdPingPool.Put(x)
	}
}

var cmdPingAckPool = sync.Pool{New: func() interface{} { return new(CmdPingAck) }}

func NewCmdPingAck() *CmdPingAck {
	return cmdPingAckPool.Get().(*CmdPingAck)
}

func (x *CmdPingAck) Release() {
	if x != nil {
		x.Reset()
		cmdPingAckPool.Put(x)
	}
}

var cmdStreamPool = sync.Pool{New: func() interface{} { return new(CmdStream) }}

func NewCmdStream() *CmdStream {
	return cmdStreamPool.Get().(*CmdStream)
}

func (x *CmdStream) Release() {
	if x != nil {
		x.Reset()
		cmdStreamPool.Put(x)
	}
}
