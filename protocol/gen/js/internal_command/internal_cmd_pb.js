// Code generated by ProtoKitGo. DO NOT EDIT.

"use strict";
exports.__esModule = true;
exports.InternalCmdService =void 0;
var internal_command_internal_pb = require("../internal_command/internal_pb");
var netutils_cmds_pb = require("../netutils/cmds_pb");
var netutils_common_pb = require("../netutils/common_pb");
var InternalCmdService;
(function (InternalCmdService) {
    var CmdPing = /** @class */ (function () {
        function CmdPing() {
        }
        CmdPing.createRequest = function () {
            return new netutils_cmds_pb.CmdPing();
        };
        CmdPing.createResponse = function (message) {
            if (!message) {
                return new netutils_cmds_pb.CmdPingAck();
            }
            return message;
        };
        CmdPing.createResponses = function (messages) {
            if (!messages || messages.length === 0) {
                return [new netutils_cmds_pb.CmdPingAck()];
            }
            return messages;
        };
        CmdPing.uri = "/auto/netutils.InternalCmd/CmdPing";
        return CmdPing;
    }());
    InternalCmdService.CmdPing = CmdPing;

    var CmdCheckup = /** @class */ (function () {
        function CmdCheckup() {
        }
        CmdCheckup.createRequest = function () {
            return new netutils_cmds_pb.CmdCheckup();
        };
        CmdCheckup.createResponse = function (message) {
            if (!message) {
                return new netutils_cmds_pb.CmdCheckup();
            }
            return message;
        };
        CmdCheckup.createResponses = function (messages) {
            if (!messages || messages.length === 0) {
                return [new netutils_cmds_pb.CmdCheckup()];
            }
            return messages;
        };
        CmdCheckup.uri = "/auto/netutils.InternalCmd/CmdCheckup";
        return CmdCheckup;
    }());
    InternalCmdService.CmdCheckup = CmdCheckup;

    var CmdBuildStream = /** @class */ (function () {
        function CmdBuildStream() {
        }
        CmdBuildStream.createRequest = function () {
            return new internal_command_internal_pb.CmdStream();
        };
        CmdBuildStream.createResponse = function (message) {
            if (!message) {
                return new internal_command_internal_pb.CmdStream();
            }
            return message;
        };
        CmdBuildStream.createResponses = function (messages) {
            if (!messages || messages.length === 0) {
                return [new internal_command_internal_pb.CmdStream()];
            }
            return messages;
        };
        CmdBuildStream.uri = "/auto/netutils.InternalCmd/CmdBuildStream";
        return CmdBuildStream;
    }());
    InternalCmdService.CmdBuildStream = CmdBuildStream;

})(InternalCmdService = exports.InternalCmdService || (exports.InternalCmdService = {}));
